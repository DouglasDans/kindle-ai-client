---
alwaysApply: true
---
### üìå Vis√£o geral

# üìÑ project-rules.md

## Projeto: Kindle AI Client

---

## üéØ Vis√£o geral

Este projeto √© um **cliente de IA minimalista**, projetado especificamente para funcionar no navegador limitado do Kindle.
O objetivo √© proporcionar uma forma simples, r√°pida e leve do usu√°rio enviar uma pergunta e receber uma resposta de um modelo de linguagem (ex: OpenAI), sem qualquer sobrecarga visual ou t√©cnica.

---

## üöÄ Funcionalidades principais

### 1. P√°gina Inicial (`/`)

* Exibe um formul√°rio com:

  * `textarea` para o usu√°rio digitar sua pergunta (prompt).
  * `button` para enviar o formul√°rio.
* O formul√°rio utiliza `method="POST"` e `action="/responder"`.
* N√£o h√° JavaScript obrigat√≥rio; a navega√ß√£o funciona apenas com HTML puro.

### 2. P√°gina de Resposta (`/responder`)

* Recebe via `POST` o prompt enviado pelo usu√°rio.
* Sanitiza e valida o input.
* Envia o prompt ao backend, que consulta o modelo de IA.
* Renderiza uma p√°gina HTML com:

  * O prompt original enviado pelo usu√°rio.
  * A resposta gerada pela IA.
  * Um link claro para retornar √† home e enviar outra pergunta.

---

## üîí Regras de neg√≥cio

* Cada requisi√ß√£o √© **independente**: n√£o h√° contexto ou hist√≥rico de conversa.
* N√£o h√° qualquer forma de login, cadastro ou sess√£o persistente.
* Nenhum dado pessoal do usu√°rio √© armazenado.
* O fluxo √© sempre:

  ```
  [Home -> Form -> POST -> /responder -> HTML de resposta -> Link "voltar"]
  ```
* Todo o processamento da pergunta e gera√ß√£o de resposta √© feito **exclusivamente no servidor**.
* A interface n√£o armazena ou exibe conversas passadas.

---

## üö¶ Restri√ß√µes t√©cnicas

### Compatibilidade

* O site deve funcionar perfeitamente no navegador do Kindle, que tem suporte limitado a HTML e CSS.
* N√£o utilizar:

  * Frameworks front-end (React, Vue, Angular, etc.).
  * Bundlers como Webpack ou Vite no cliente.
  * Shadow DOM ou Web Components.
  * Assets externos (como fontes ou imagens pesadas).
* O HTML deve ser v√°lido, simples e com fallback total caso CSS ou JS n√£o carreguem.

### Backend

* Respons√°vel por:

  * Receber o prompt.
  * Chamar o modelo de linguagem (via OpenAI API ou outro provedor).
  * Retornar o HTML final com a resposta renderizada.
* Utilizar Node.js com Express (ou Fastify) para m√°xima leveza e controle.
* Template engine opcional (EJS, Pug ou HTML string literals).
* Implementar:

  * Sanitiza√ß√£o dos dados de entrada para evitar XSS.
  * Timeout configur√°vel para chamadas √† IA, retornando mensagem amig√°vel se excedido.
  * Compress√£o (`gzip`) e headers adequados (`Cache-Control`, `Content-Security-Policy`).

### Frontend

* 100% Server Side Rendering (SSR).
* Sem depend√™ncias JS obrigat√≥rias.
* CSS opcional deve ser embutido no pr√≥prio HTML (inline style ou `<style>` interno), para reduzir requisi√ß√µes HTTP.

---

## ‚öñÔ∏è Regras adicionais e limites operacionais

* O campo de prompt do usu√°rio ter√° um limite m√°ximo de **500 caracteres**.
* O tempo m√°ximo para resposta do modelo de IA ser√° de **10 segundos**.
* Caso a IA n√£o responda no tempo esperado, o usu√°rio ver√° uma p√°gina de erro amig√°vel com sugest√£o para tentar novamente.
* Todos os textos gerados devem ser escapados apropriadamente para evitar qualquer problema de renderiza√ß√£o ou seguran√ßa no HTML.

---

## üîê Seguran√ßa e privacidade

* Nenhum dado pessoal ou IP ser√° armazenado para tracking.
* Logs do servidor devem conter apenas erros e m√©tricas m√≠nimas para troubleshooting, nunca prompts completos ou respostas.
* O servi√ßo ser√° stateless e sem cookies ou sess√µes.

---

## üîç Futuras extens√µes permitidas

> N√£o fazem parte do escopo inicial, mas podem ser consideradas sem comprometer o projeto:

* Salvar as perguntas e respostas recentes apenas no servidor para an√°lise estat√≠stica agregada.
* Oferecer modo escuro via CSS simples, adaptado para e-readers.
* Permitir exportar a resposta como PDF ou ePub.

---

## ‚úÖ Sum√°rio executivo

* ‚úÖ Uma pergunta por vez, sem hist√≥rico.
* ‚úÖ Interface puramente HTML, compat√≠vel com Kindle.
* ‚úÖ Todo processamento no backend.
* ‚úÖ Sem login, sem sess√£o, sem dados pessoais.
* ‚úÖ Foco em leveza, simplicidade e acessibilidade.


